#SORT DATAFRAME
library(dplyr)
df.sorted <- df %>%
  arrange(desc(x)) #sorts descending. Remove desc() function if you want ascending

#FINDING DUPLICATES
anyDuplicated(df$x) #returns a number

df.dups <- df[duplicated(df$x), ] #Create dataset with only duplicates

#PUT COLUMN NAMES IN A LIST
list <- c("x1", "x2")

##dynamic based on variable positions
variable.positions <- paste(seq_along(df), names(df), sep=": ")
print(variable.positions)
list <- names(df)[1:10]

#DROP EMPTY COLUMNS FROM A DATAFRAME
df <- df %>% 
  mutate(across(everything(), ~replace(., . %in% c(""), NA)))

df <- df %>%
  select_if(function(x) !(all(is.na(x))))

#REMOVE PREFIX FROM VARIABLE NAMES
names(df) <- sub('^prefix', '', names(df))

#CONVERT VARIABLES TO NUMERIC
## By specific variable names
df <- df %>%
  mutate(var1 = as.numeric(var1),
         var3 = as.numeric(var3))

## By column position
df <- df %>%
  mutate_at(vars(1, 3), as.numeric)

## From a list
df <- df %>%
  mutate(across(all_of(variable_list), as.numeric))

#WRITE TO EXCEL
openxlsx::write.xlsx(df, file = "filename.xlsx")
